
<h2 class="sub-header">
    <div class="pull-right">
        <a href="/webmail/{{mailbox.id}}/settings" class="btn btn-default"><span class="glyphicon glyphicon-cog" aria-hidden="true"></span> Settings</a>
    </div>
    {{#if mailbox.icon}}
        <span class="glyphicon glyphicon-{{mailbox.icon}}" aria-hidden="true"></span>
    {{else}}
        <span class="glyphicon glyphicon-inbox" aria-hidden="true"></span>
    {{/if}}
    {{mailbox.name}}
</h2>

<div class="pull-left" style="margin-left: 10px; width: 20px;">
    <input type="checkbox" class="toggle-all" />
</div>

<fieldset id="action-toolbar" disabled>
    <div class="form-group">

        <button class="btn btn-default btn-xs bulk-mark-seen">Mark as Seen</button>
        <button class="btn btn-default btn-xs bulk-mark-unseen">Mark as Unseen</button>

        <button class="btn btn-default btn-xs bulk-delete" data-toggle="modal" data-target="#deleteModal"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Delete</button>


        <div class="btn-group">
          <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <span class="glyphicon glyphicon-inbox" aria-hidden="true"></span> Move <span class="caret"></span>
          </button>
          <ul class="dropdown-menu">
             {{#each mailboxes}}
                {{#if canMoveTo}}
                    <li><a href="#" class="bulk-move" data-mailbox="{{id}}"  data-mailbox-path="{{path}}" data-toggle="modal" data-target="#moveModal">{{path}}</a></li>
                {{/if}}
            {{/each}}
          </ul>
        </div>

    </div>
</fieldset>

<div class="table-responsive">
    <table class="messagelist">
        <colgroup>
            <col class="messagerow-spacer-col" />
            <col class="messagerow-checkbox-col" />
            <col class="messagerow-star-col" />
            <col class="messagerow-from-col" />
            <col class="messagerow-subject-col" />
            <col class="messagerow-info-col" />
            <col class="messagerow-date-col" />
            <col class="messagerow-spacer-col" />
        </colgroup>
        <tbody>
            {{#each messages}}
                {{>messagerow}}
            {{/each}}
        </tbody>
    </table>
</div>

<nav aria-label="nav">
    <ul class="pager">
        {{#if previousCursor}}
            <li class="previous"><a href="/webmail/{{mailbox.id}}?previous={{previousCursor}}&amp;page={{previousPage}}"><span aria-hidden="true">&larr;</span> Newer</a></li>
        {{else}}
            <li class="previous disabled"><a href="#"><span aria-hidden="true">&larr;</span> Newer</a></li>
        {{/if}}

        <li style="display: inline-block; padding-top: 7px;">
            Page {{page}}
        </li>

        {{#if nextCursor}}
            <li class="next"><a href="/webmail/{{mailbox.id}}?next={{nextCursor}}&amp;page={{nextPage}}">Older <span aria-hidden="true">&rarr;</span></a></li>
        {{else}}
            <li class="next disabled"><a href="#">Older <span aria-hidden="true">&rarr;</span></a></li>
        {{/if}}
    </ul>
</nav>

<!-- Modal -->
<div class="modal" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="deleteModalLabel">Delete messages</h4>
      </div>
      <div class="modal-body">
        {{#if isTrash}}
            Are you sure you want to permanently delete selected messages?
        {{else}}
            Are you sure you want to move selected messages to Trash folder?
        {{/if}}
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">No, cancel</button>
        <button type="button" class="btn btn-danger bulk-delete-confirm" data-loading-text="Deleting..." >Yes, delete</button>
      </div>
    </div>
  </div>
</div>

<div class="modal" id="moveModal" tabindex="-1" role="dialog" aria-labelledby="moveModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="moveModalLabel">Move messages</h4>
      </div>
      <div class="modal-body">
          Are you sure you want to move selected messages to <span class="bulk-move-path">another folder</span>?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">No, cancel</button>
        <button type="button" class="btn btn-primary bulk-move-confirm" data-loading-text="Moving..." >Yes, move</button>
      </div>
    </div>
  </div>
</div>

<script id="messagerow-template" type="text/x-handlebars-template">
    {{{messageRowTemplate}}}
</script>

<input type="hidden" id="_csrf" value="{{csrfToken}}">
<input type="hidden" id="mailbox" value="{{mailbox.id}}">
<input type="hidden" id="cursor-type" value="{{cursorType}}">
<input type="hidden" id="cursor-value" value="{{cursorValue}}">
<input type="hidden" id="page" value="{{page}}">
<input type="hidden" id="mailbox-type" value="{{mailbox.specialUse}}">

<script src="/whatwg-fetch/fetch.js"></script>
<script src="/handlebars/handlebars.min.js"></script>
<script>

// star toggle
(function(){
    var toggleStar = function(e, elm){
        e.preventDefault();
        e.stopPropagation();

        if(!elm || elm.dataset.status === 'pending'){
            return;
        }

        elm.dataset.status = 'pending';
        var flagged = elm.classList.contains('flagged');

        var done = function(){
            elm.dataset.status = 'done';
        }

        fetch('/api/toggle/flagged', {
            method: 'post',
            headers: {
                Accept: 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            credentials: 'include',
            body: JSON.stringify({
                _csrf: document.getElementById('_csrf').value,
                mailbox: document.getElementById('mailbox').value,
                message: elm.dataset.message,
                flagged: !flagged // toggle
            })
        })
        .then(function(res) {
            return res.json();
        })
        .then(function(res) {
            if(res.error){
                console.error(res.error);
                return done();
            }

            if(flagged){
                elm.classList.remove('flagged');
                elm.classList.add('unflagged');
                elm.querySelector('.glyphicon').classList.remove('glyphicon-star');
                elm.querySelector('.glyphicon').classList.add('glyphicon-star-empty');
            }else{
                elm.classList.remove('unflagged');
                elm.classList.add('flagged');
                elm.querySelector('.glyphicon').classList.remove('glyphicon-star-empty');
                elm.querySelector('.glyphicon').classList.add('glyphicon-star');
            }

            done();
        }).catch(function(err){
            console.error(err);
            done();
        });

    };

    var setupToggling = function(elm){
        elm.addEventListener('click', function(e){
            toggleStar(e, elm);
        }, false);
    }

    var starElms = document.querySelectorAll('.message-star');
    for(var i=0, len = starElms.length; i<len; i++){
        setupToggling(starElms[i]);
    }
})();

// checkboxes
document.addEventListener('DOMContentLoaded', function() {
    var checkboxes = document.querySelectorAll('.message-checkbox');
    var toolbarElm = document.querySelector('#action-toolbar');
    var mailboxType = document.querySelector('#mailbox-type');
    var toggleAllElm = document.querySelector('.toggle-all');

    var isInbox = mailboxType === 'INBOX';
    var isSent = mailboxType === '\\Sent';
    var isTrash= mailboxType === '\\Trash';
    var isJunk = mailboxType === '\\Junk';

    var getChecked = function(){
        var result = [];
        for(var i=0, len = checkboxes.length; i<len; i++){
            if(checkboxes[i].checked){
                result.push({
                    elm: checkboxes[i],
                    message: checkboxes[i].dataset.message
                });
            }
        }
        return result;
    }

    var toggleToolbar = function(){
        let checked = 0;
        for(var i=0, len = checkboxes.length; i<len; i++){
            if(checkboxes[i].checked){
                checked++;
            }
        }
        if(checked){
            toolbarElm.disabled = false;
            if(checked === checkboxes.length){
                toggleAllElm.checked = true;
            }
        }else{
            toolbarElm.disabled = true;
            toggleAllElm.checked = false;
        }
    };

    for(var i=0, len = checkboxes.length; i<len; i++){
        checkboxes[i].addEventListener('click', toggleToolbar, false);
        checkboxes[i].addEventListener('change', toggleToolbar, false);
    }

    var findRow = function(elm, level){
        level = level || 0;
        var parent = elm.parentNode;
        if(!parent || level > 10){
            return false;
        }
        if(parent.classList.contains('messagerow')){
            return parent;
        }
        return findRow(parent, level+1);
    }

    var removeRow = function(id){
        var row = document.getElementById('msg_' + id);
        if(row && row.parentNode){
            row.parentNode.removeChild(row);
        }
    }

    var messagerowSource = document.getElementById('messagerow-template').innerHTML;
    var messagerowTemplate = Handlebars.compile(messagerowSource);

    var redrawList = function(done){
        fetch('/api/list', {
            method: 'post',
            headers: {
                Accept: 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            credentials: 'include',
            body: JSON.stringify({
                _csrf: document.getElementById('_csrf').value,
                mailbox: document.getElementById('mailbox').value,
                cursorType: document.getElementById('cursor-type').value,
                cursorValue: document.getElementById('cursor-value').value,
                page: document.getElementById('page').value
            })
        })
        .then(function(res) {
            return res.json();
        })
        .then(function(res) {
            if(res.error){
                console.error(res.error);
                return done();
            }

            var html = res.results.map(function(message){
                return messagerowTemplate(message);
            }).join('\n');

            document.querySelector('.messagelist tbody').innerHTML = html;

            // reset page load handlers
            checkboxes = document.querySelectorAll('.message-checkbox');
            toggleToolbar();
            $("[rel='tooltip']").tooltip();
            updateFixedDatestrings()

            done();
        }).catch(function(err){
            console.error(err);
            done();
        });
    };

    var pendingSeen = false;
    var toggleSeen = function(seen){
        if(pendingSeen){
            return false;
        }

        var checked = getChecked();
        if(!checked.length){
            return false;
        }

        pendingSeen = true;

        var messages = checked.map(function(m){return m.message;});

        var done = function(){
            pendingSeen = false;
        }

        fetch('/api/toggle/seen', {
            method: 'post',
            headers: {
                Accept: 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            credentials: 'include',
            body: JSON.stringify({
                _csrf: document.getElementById('_csrf').value,
                mailbox: document.getElementById('mailbox').value,
                message: messages.join(','),
                seen: !!seen
            })
        })
        .then(function(res) {
            return res.json();
        })
        .then(function(res) {
            if(res.error){
                console.error(res.error);
                return done();
            }

            checked.forEach(function(checkbox){
                let row = findRow(checkbox.elm);
                if(row){
                    row.classList.remove(seen ? 'message-unseen' : 'message-seen');
                    row.classList.add(seen ? 'message-seen' : 'message-unseen');
                }
            })

            done();
        }).catch(function(err){
            console.error(err);
            done();
        });
    }

    var setUnseen = function(){
        toggleSeen(false);
    };

    var setSeen = function(){
        toggleSeen(true);
    };

    document.querySelector('.bulk-mark-unseen').addEventListener('click', setUnseen, false);
    document.querySelector('.bulk-mark-unseen').addEventListener('touch', setUnseen, false);
    document.querySelector('.bulk-mark-seen').addEventListener('click', setSeen, false);
    document.querySelector('.bulk-mark-unseen').addEventListener('touch', setUnseen, false);

    var toggleAll = function(){
        var checked = toggleAllElm.checked;

        for(var i=0, len = checkboxes.length; i<len; i++){
            checkboxes[i].checked = checked;
        }

        if(checked && checkboxes.length){
            toolbarElm.disabled = false;
        }
    }

    document.querySelector('.toggle-all').addEventListener('click', toggleAll, false);
    document.querySelector('.toggle-all').addEventListener('change', toggleAll, false);

    var pendingDeleted = false;
    var deleteMessage = function(){
        if(pendingDeleted){
            return false;
        }

        var checked = getChecked();
        if(!checked.length){
            return false;
        }

        pendingDeleted = true;
        $('#deleteModal .bulk-delete-confirm').button('loading');

        var messages = checked.map(function(m){return m.message;});

        var done = function(){
            pendingDeleted = false;
            $('#deleteModal .bulk-delete-confirm').button('reset');
            $('#deleteModal').modal('hide');
        }

        fetch('/api/delete', {
            method: 'post',
            headers: {
                Accept: 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            credentials: 'include',
            body: JSON.stringify({
                _csrf: document.getElementById('_csrf').value,
                mailbox: document.getElementById('mailbox').value,
                message: messages.join(',')
            })
        })
        .then(function(res) {
            return res.json();
        })
        .then(function(res) {
            if(res.error){
                console.error(res.error);
                return done();
            }

            var removeRow = function(id){
                var row = document.getElementById('msg_' + id);
                if(row && row.parentNode){
                    row.parentNode.removeChild(row);
                }
            }

            var deleted = 0
            if(res.id && res.id.length){
                for(var i=0, len = res.id.length; i<len; i++){
                    if(res.id[i] && res.id[i][0] && res.id[i][1]){
                        removeRow(res.id[i][0]);
                        deleted++;
                    }
                }
            }

            if(deleted){
                return redrawList(done);
            }

            done();
        }).catch(function(err){
            console.error(err);
            done();
        });
    };

    document.querySelector('.bulk-delete-confirm').addEventListener('click', deleteMessage, false);
    document.querySelector('.bulk-delete-confirm').addEventListener('touch', deleteMessage, false);

    var pendingMove = false;
    var moveMessage = function(target){
        if(pendingMove){
            return false;
        }

        var checked = getChecked();
        if(!checked.length){
            return false;
        }

        pendingMove = true;
        $('#moveModal .bulk-move-confirm').button('loading');

        var messages = checked.map(function(m){return m.message;});

        var done = function(){
            pendingMove = false;
            $('#moveModal .bulk-move-confirm').button('reset');
            $('#moveModal').modal('hide');
        }

        fetch('/api/move', {
            method: 'post',
            headers: {
                Accept: 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            credentials: 'include',
            body: JSON.stringify({
                _csrf: document.getElementById('_csrf').value,
                mailbox: document.getElementById('mailbox').value,
                message: messages.join(','),
                target: document.querySelector('.bulk-move-confirm').dataset.mailbox
            })
        })
        .then(function(res) {
            return res.json();
        })
        .then(function(res) {
            if(res.error){
                console.error(res.error);
                return done();
            }

            var moved = 0;
            if(res.id && res.id.length){
                for(var i=0, len = res.id.length; i<len; i++){
                    if(res.id[i] && res.id[i][0] && res.id[i][1]){
                        removeRow(res.id[i][0]);
                        moved++;
                    }
                }
            }

            if(moved){
                return redrawList(done);
            }

            done();
        }).catch(function(err){
            console.error(err);
            done();
        });
    };

    $('#moveModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget); // Button that triggered the modal
        var mailbox = button.data('mailbox'); // Extract info from data-* attributes
        var path = button.data('mailbox-path');
        $('.bulk-move-path').text(path);
        document.querySelector('.bulk-move-confirm').dataset.mailbox = mailbox;
    });

    document.querySelector('.bulk-move-confirm').addEventListener('click', moveMessage, false);
    document.querySelector('.bulk-move-confirm').addEventListener('touch', moveMessage, false);

    toggleToolbar();
}, false);

</script>
