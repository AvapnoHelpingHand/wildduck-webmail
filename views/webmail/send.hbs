

<form method="post" class="form-horizontal" action="/webmail/send">
    <input type="hidden" name="_csrf" value="{{csrfToken}}">
    <input type="hidden" name="action" value="{{values.action}}">
    <input type="hidden" name="refMailbox" value="{{values.refMailbox}}">
    <input type="hidden" name="refMessage" value="{{values.refMessage}}">
    <input type="hidden" name="draftMailbox" value="{{values.draftMailbox}}">
    <input type="hidden" name="draftMessage" value="{{values.draftMessage}}">
    <input type="hidden" name="draft" value="{{values.draft}}">

    <div class="form-group">
        <div class="col-sm-offset-1 col-sm-11" style="margin-top: 20px;">
            <button class="btn btn-primary btn-xs" type="submit"><span class="glyphicon glyphicon-send" aria-hidden="true"></span> Send message</button>

            <a {{#if messageRef}} href="/webmail/{{mailboxRef}}/message/{{messageRef}}" {{else}} href="/webmail" {{/if}} class="btn btn-danger btn-xs" type="submit"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Discard Draft</a>
        </div>
    </div>

    <div class="form-group{{#if errors.to}} has-error{{/if}}">
        <label for="inputTo" class="col-sm-1 control-label">To</label>
        <div class="col-sm-11">
            <input type="text" class="form-control" name="to" id="inputTo" value="{{values.to}}" placeholder="Recipient">
            {{#if errors.to}}
                <span class="help-block">{{errors.to}}</span>
            {{/if}}
        </div>
    </div>

    <div id="cc-field" class="form-group{{#if errors.cc}} has-error{{/if}}" {{#unless values.cc}}style="display:none"{{/unless}}>
        <label for="inputCc" class="col-sm-1 control-label">Cc</label>
        <div class="col-sm-11">
            <input type="text" class="form-control" name="cc" id="inputCc" value="{{values.cc}}" placeholder="Cc">
            {{#if errors.cc}}
                <span class="help-block">{{errors.cc}}</span>
            {{/if}}
        </div>
    </div>

    <div id="bcc-field" class="form-group{{#if errors.bcc}} has-error{{/if}}" {{#unless values.bcc}}style="display:none"{{/unless}}>
        <label for="inputBcc" class="col-sm-1 control-label">Bcc</label>
        <div class="col-sm-11">
            <input type="text" class="form-control" name="bcc" id="inputBcc" value="{{values.bcc}}" placeholder="Bcc">
            {{#if errors.bcc}}
                <span class="help-block">{{errors.bcc}}</span>
            {{/if}}
        </div>
    </div>

    <div class="text-right" style="margin-top: -10px; margin-bottom: 10px;">
        <a href="#" id="link-add-cc" {{#if values.cc}}style="display:none"{{/if}}>Cc</a>
        <a href="#" id="link-add-bcc" {{#if values.bcc}}style="display:none"{{/if}}>Bcc</a>
    </div>

    <div class="form-group{{#if errors.subject}} has-error{{/if}}">
        <label for="inputSubject" class="col-sm-1 control-label">Subject</label>
        <div class="col-sm-11">
            <input type="text" class="form-control" id="inputSubject" name="subject" value="{{values.subject}}" placeholder="Message subject">
            {{#if errors.subject}}
                <span class="help-block">{{errors.subject}}</span>
            {{/if}}
        </div>
    </div>

    <div class="form-group{{#if errors.editordata}} has-error{{/if}}">
        <div class="col-sm-12">
            <textarea id="summernote" name="editordata"></textarea>
            {{#if errors.editordata}}
                <span class="help-block">{{errors.editordata}}</span>
            {{/if}}
        </div>
    </div>
</form>

<script type="text/javascript" src="/purify-0.9.0/purify.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function(event) {
        var messageHtml = {{{messageHtml}}};

        if (messageHtml && messageHtml.length && /^\s*$/.test(document.getElementById('summernote').value)) {
            // make sure that server timestamps get converted to browser time strings
            // {%DATE ... %}
            messageHtml = messageHtml.map(function(html){
                return html.replace(/\{&DATE ([^&]+)&\}/g, function(m, d){
                    return moment(d.trim()).format('LLLL');
                });
            });

            var clean = DOMPurify.sanitize(messageHtml.join('\n'), {
                ALLOW_UNKNOWN_PROTOCOLS: true,
                WHOLE_DOCUMENT: false,
                FORBID_TAGS: ['form', 'style']
            });

            {{#unless keepHtmlAsIs}}
                clean = '<br/><br/>\n<blockquote>' + clean + '</blockquote>';
            {{/unless}}

            document.getElementById('summernote').value = clean;
        }

        $('#summernote').summernote({
            toolbar: [
                // [groupName, [list of button]]
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['fontsize', ['fontsize']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']]
            ],
            height: 300
        });

        var linkAddCc = document.getElementById('link-add-cc');
        var linkAddBcc = document.getElementById('link-add-bcc');

        var showCc = function(){
            document.getElementById('cc-field').style.display = 'block';
            linkAddCc.style.display = 'none';
            document.getElementById('inputCc').focus();
        };

        var showBcc = function(){
            document.getElementById('bcc-field').style.display = 'block';
            linkAddBcc.style.display = 'none';
            document.getElementById('inputBcc').focus();
        };

        linkAddCc.addEventListener('click', showCc, false);
        linkAddCc.addEventListener('touch', showCc, false);
        linkAddBcc.addEventListener('click', showBcc, false);
        linkAddBcc.addEventListener('touch', showBcc, false);

    }, false);
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    var stream = new EventSource('/api/events');
    stream.onmessage = function(e) {
        var data, row, star, redrawTimer;
        try {
            data = JSON.parse(e.data);
        } catch (E) {
            return;
        }
        switch (data.command) {
            case 'COUNTERS': {
                if (data.mailbox) {
                    row = document.querySelector('.unseen-counter-' + data.mailbox);
                    if(row){
                        if(data.unseen){
                            row.style.display = 'block';
                            row.textContent = data.unseen;
                        }else {
                            row.style.display = 'none';
                            row.textContent = 0;
                        }
                    }
                }
                break;
            }
        }
    };
});
</script>
